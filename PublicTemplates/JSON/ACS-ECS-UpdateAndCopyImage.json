{
  "FormatVersion": "OOS-2019-06-01",
  "Description": {
    "en": "Updates an existing ECS image via ECS Cloud Assistant then creates an ECS image and copy new image.",
    "zh-cn": "\u901a\u8fc7\u8fd0\u884c\u547d\u4ee4\u66f4\u65b0\u4e00\u4e2a\u5df2\u5b58\u5728\u7684ECS\u955c\u50cf\u540e\u521b\u5efa\u4e00\u4e2a\u65b0ECS\u955c\u50cf\u5e76\u4e14\u514b\u9686\u65b0\u955c\u50cf\u5230\u5176\u4ed6\u5730\u57df\u3002",
    "name-en": "ACS-ECS-UpdateAndCopyImage",
    "name-zh-cn": "\u66f4\u65b0ECS\u955c\u50cf\u5e76\u540c\u6b65\u5230\u5176\u5b83\u5730\u57df",
    "categories": [
      "image_manage"
    ]
  },
  "Parameters": {
    "targetImageName": {
      "Description": {
        "en": "The name of new image.",
        "zh-cn": "\u65b0\u955c\u50cf\u7684\u540d\u79f0\u3002"
      },
      "Type": "String",
      "MinLength": 1,
      "Default": "UpdateImage_from_{{ sourceImageId }}_on_{{ ACS::ExecutionId }}"
    },
    "sourceImageId": {
      "Description": {
        "en": "The image ID for the ECS instance.",
        "zh-cn": "\u6e90\u955c\u50cfID\u3002"
      },
      "Type": "String",
      "AllowedPattern": "[A-Za-z0-9_\\-\\.]*"
    },
    "instanceType": {
      "Description": {
        "en": "The instance type for the ECS instances.",
        "zh-cn": "\u5b9e\u4f8b\u7c7b\u578b\u3002"
      },
      "Type": "String",
      "AssociationProperty": "ALIYUN::ECS::Instance::InstanceType",
      "AllowedPattern": "ecs\\.[A-Za-z0-9\\.\\-]*",
      "Default": "ecs.g5.large"
    },
    "securityGroupId": {
      "Description": {
        "en": "The security group ID for the ECS instances.",
        "zh-cn": "\u5b89\u5168\u7ec4ID\u3002"
      },
      "Type": "String",
      "AssociationProperty": "ALIYUN::ECS::SecurityGroup::SecurityGroupId"
    },
    "vSwitchId": {
      "Description": {
        "en": "The virtual switch ID for the ECS instances\u3002",
        "zh-cn": "\u4ea4\u6362\u673aID\u3002"
      },
      "Type": "String",
      "AssociationProperty": "ALIYUN::VPC::VSwitch::VSwitchId",
      "AssociationPropertyMetadata": {
        "Filters": [
          {
            "SecurityGroupId": "securityGroupId"
          }
        ]
      }
    },
    "ramRoleName": {
      "Description": {
        "en": "The ram role for the ECS instances.",
        "zh-cn": "\u5b9e\u4f8b\u7684RAM\u89d2\u8272\u3002"
      },
      "Type": "String",
      "Default": ""
    },
    "tags": {
      "Description": {
        "en": "The image tag.",
        "zh-cn": "\u955c\u50cf\u6807\u7b7e\u3002"
      },
      "Type": "Json",
      "AssociationProperty": "Tags",
      "AssociationPropertyMetadata": {
        "ShowSystem": false
      },
      "Default": []
    },
    "commandType": {
      "Description": {
        "en": "The type of command.",
        "zh-cn": "\u4e91\u52a9\u624b\u547d\u4ee4\u7c7b\u578b\u3002"
      },
      "Type": "String",
      "AllowedValues": [
        "RunBatScript",
        "RunPowerShellScript",
        "RunShellScript"
      ],
      "Default": "RunShellScript"
    },
    "commandContent": {
      "Description": {
        "en": "Command content to run in ECS instance.",
        "zh-cn": "\u5728ECS\u5b9e\u4f8b\u4e2d\u6267\u884c\u7684\u4e91\u52a9\u624b\u547d\u4ee4\u3002"
      },
      "Type": "String",
      "AssociationProperty": "Code",
      "Default": "echo hello"
    },
    "targetRegionIds": {
      "Description": {
        "en": "The Target Region Ids.",
        "zh-cn": "\u76ee\u6807\u5730\u57dfID\u3002"
      },
      "Type": "List",
      "AllowedValues": [
        "all-regions",
        "cn-beijing",
        "cn-qingdao",
        "cn-zhangjiakou",
        "cn-huhehaote",
        "cn-hangzhou",
        "cn-shanghai",
        "cn-shenzhen",
        "cn-chengdu",
        "cn-hongkong",
        "ap-northeast-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "ap-southeast-3",
        "ap-southeast-5",
        "ap-south-1",
        "us-east-1",
        "us-west-1",
        "eu-west-1",
        "me-east-1",
        "eu-central-1"
      ],
      "Default": []
    },
    "accountIds": {
      "Description": {
        "en": "The IDs of the Alibaba Cloud accounts to which the image is shared.",
        "zh-cn": "\u6388\u6743\u5171\u4eab\u955c\u50cf\u7684\u963f\u91cc\u4e91\u8d26\u53f7ID\u3002"
      },
      "Type": "List",
      "Default": []
    },
    "scalingConfigurationIds": {
      "Description": {
        "en": "The ID list of the scaling configuration to be modified.Must correspond to the selected region.",
        "zh-cn": "\u5f85\u4fee\u6539\u7684\u4f38\u7f29\u914d\u7f6eIDs\uff0c\u5fc5\u987b\u8981\u4e0e\u6240\u9009\u7684\u5730\u57df\u5bf9\u5e94\u3002"
      },
      "Type": "List",
      "Default": []
    },
    "rateControl": {
      "Description": {
        "en": "Concurrency ratio of task execution.",
        "zh-cn": "\u4efb\u52a1\u6267\u884c\u7684\u5e76\u53d1\u6bd4\u7387\u3002"
      },
      "Type": "Json",
      "AssociationProperty": "RateControl",
      "Default": {
        "Mode": "Concurrency",
        "MaxErrors": 0,
        "Concurrency": 5
      }
    },
    "OOSAssumeRole": {
      "Description": {
        "en": "The RAM role to be assumed by OOS.",
        "zh-cn": "OOS\u626e\u6f14\u7684RAM\u89d2\u8272\u3002"
      },
      "Type": "String",
      "Default": "OOSServiceRole"
    }
  },
  "RamRole": "{{ OOSAssumeRole }}",
  "Tasks": [
    {
      "Name": "runInstances",
      "Action": "ACS::ECS::RunInstances",
      "Description": {
        "en": "Create a ECS instance with source image.",
        "zh-cn": "\u7528\u6e90\u955c\u50cf\u521b\u5efa\u4e00\u53f0ECS\u5b9e\u4f8b\u3002"
      },
      "Properties": {
        "imageId": "{{ sourceImageId }}",
        "instanceType": "{{ instanceType }}",
        "securityGroupId": "{{ securityGroupId }}",
        "vSwitchId": "{{ vSwitchId }}",
        "ramRoleName": "{{ ramRoleName }}"
      },
      "Outputs": {
        "instanceId": {
          "ValueSelector": "instanceIds[0]",
          "Type": "String"
        }
      }
    },
    {
      "Name": "installCloudAssistant",
      "Action": "ACS::ECS::InstallCloudAssistant",
      "Description": {
        "en": "Install cloud assostant for ECS instance.",
        "zh-cn": "\u7ed9\u5b9e\u4f8b\u5b89\u88c5\u4e91\u52a9\u624b\u3002"
      },
      "OnError": "deleteInstance",
      "Properties": {
        "instanceId": "{{ runInstances.instanceId }}"
      }
    },
    {
      "Name": "runCommand",
      "Action": "ACS::ECS::RunCommand",
      "Description": {
        "en": "Run cloud assostant command on ECS instance.",
        "zh-cn": "\u5728\u5b9e\u4f8b\u4e2d\u8fd0\u884c\u4e91\u52a9\u624b\u547d\u4ee4\u3002"
      },
      "OnError": "deleteInstance",
      "Properties": {
        "commandContent": "{{ commandContent }}",
        "commandType": "{{ commandType }}",
        "instanceId": "{{ runInstances.instanceId }}"
      }
    },
    {
      "Name": "stopInstance",
      "Action": "ACS::ECS::StopInstance",
      "Description": {
        "en": "Stops the ECS instance.",
        "zh-cn": "\u505c\u6b62ECS\u5b9e\u4f8b\u3002"
      },
      "Properties": {
        "instanceId": "{{ runInstances.instanceId }}"
      }
    },
    {
      "Name": "createImage",
      "Action": "ACS::ECS::CreateImage",
      "Description": {
        "en": "Create new image with the specified image name and instance ID.",
        "zh-cn": "\u901a\u8fc7\u6307\u5b9a\u5b9e\u4f8bID\u548c\u955c\u50cf\u540d\u79f0\u521b\u5efa\u65b0\u7684\u955c\u50cf\u3002"
      },
      "OnError": "deleteInstance",
      "Properties": {
        "tags": "{{tags}}",
        "imageName": "{{ targetImageName }}-{{ ACS::CurrentUTCTime }}",
        "instanceId": "{{ runInstances.instanceId }}"
      },
      "Outputs": {
        "imageId": {
          "ValueSelector": "imageId",
          "Type": "String"
        }
      }
    },
    {
      "Name": "deleteInstanceAfterUpdateImageSuccessfully",
      "Action": "ACS::ExecuteAPI",
      "Description": {
        "en": "Release the instance after updating the image successfully\u3002",
        "zh-cn": "\u5220\u9664ECS\u5b9e\u4f8b\u3002"
      },
      "Properties": {
        "Service": "ECS",
        "API": "DeleteInstance",
        "Risk": "Normal",
        "Parameters": {
          "InstanceId": "{{ runInstances.instanceId }}",
          "Force": true
        }
      }
    },
    {
      "Name": "queryAllAvailableRegions",
      "Action": "ACS::ExecuteAPI",
      "Description": {
        "en": "View all available regions.",
        "zh-cn": "\u67e5\u8be2\u5f53\u524d\u6240\u6709\u53ef\u7528\u5730\u57df\u3002"
      },
      "Properties": {
        "Service": "ECS",
        "API": "DescribeRegions",
        "Parameters": {
          "RegionId": "{{ACS::RegionId}}"
        }
      },
      "Outputs": {
        "regionIds": {
          "Type": "List",
          "ValueSelector": "Regions.Region[]|.RegionId|select([scan(\"{{ACS::RegionId}}|test\")]|length<1)"
        },
        "allRegionsChosen": {
          "Type": "String",
          "ValueSelector": ".|{{targetRegionIds}}|sort|.[0]"
        }
      }
    },
    {
      "Name": "whetherCloneToAllRegions",
      "Action": "ACS::Choice",
      "Description": {
        "en": "Choose next task by targetRegionIds Chosen.",
        "zh-cn": "\u6839\u636e\u6240\u9009\u76ee\u7684\u5730\u57df\u5224\u65ad\u4e0b\u4e00\u6b65\u6267\u884c\u3002"
      },
      "Properties": {
        "DefaultTask": "copyImage",
        "Choices": [
          {
            "When": {
              "Fn::Equals": [
                "all-regions",
                "{{ queryAllAvailableRegions.allRegionsChosen }}"
              ]
            },
            "NextTask": "copyImageToAllRegions"
          }
        ]
      }
    },
    {
      "Name": "copyImage",
      "Action": "ACS::ECS::CopyImage",
      "OnSuccess": "whetherToShareImage",
      "OnError": "ACS::END",
      "Description": {
        "en": "Copy image to regions chosen.",
        "zh-cn": "\u590d\u5236\u955c\u50cf\u5230\u88ab\u6307\u5b9a\u7684\u5730\u57df\u3002"
      },
      "Properties": {
        "regionId": "{{ ACS::RegionId }}",
        "imageId": "{{ createImage.imageId }}",
        "targetRegionId": "{{ ACS::TaskLoopItem }}",
        "targetImageName": "{{ targetImageName }}-{{ ACS::CurrentUTCTime }}"
      },
      "Loop": {
        "Items": "{{ targetRegionIds }}",
        "RateControl": "{{ rateControl }}",
        "Outputs": {
          "imageIdsWithRegion": {
            "AggregateType": "Fn::ListJoin",
            "AggregateField": "imageIdWithRegion"
          }
        }
      },
      "Outputs": {
        "imageIdWithRegion": {
          "ValueSelector": ".|(.imageId),\"{{ ACS::TaskLoopItem }}\"",
          "Type": "List"
        }
      }
    },
    {
      "Name": "copyImageToAllRegions",
      "Action": "ACS::ECS::CopyImage",
      "Description": {
        "en": "Copy image to all available regions.",
        "zh-cn": "\u590d\u5236\u955c\u50cf\u5230\u6240\u6709\u53ef\u7528\u5730\u57df\u3002"
      },
      "Properties": {
        "regionId": "{{ ACS::RegionId }}",
        "imageId": "{{ createImage.imageId }}",
        "targetRegionId": "{{ ACS::TaskLoopItem }}",
        "targetImageName": "{{ targetImageName }}-{{ ACS::CurrentUTCTime }}"
      },
      "Loop": {
        "Items": "{{ queryAllAvailableRegions.regionIds }}",
        "RateControl": "{{ rateControl }}",
        "Outputs": {
          "imageIdsWithRegion": {
            "AggregateType": "Fn::ListJoin",
            "AggregateField": "imageIdWithRegion"
          }
        }
      },
      "Outputs": {
        "imageIdWithRegion": {
          "ValueSelector": ".|(.imageId),\"{{ ACS::TaskLoopItem }}\"",
          "Type": "List"
        }
      }
    },
    {
      "Name": "whetherToShareImage",
      "Action": "ACS::Choice",
      "Description": {
        "en": "Choose next task by accountIds.",
        "zh-cn": "\u6839\u636e\u8f93\u5165\u8d26\u6237\u503c\u5224\u65ad\u4e0b\u4e00\u6b65\u6267\u884c\u3002"
      },
      "Properties": {
        "DefaultTask": "shareImage",
        "Choices": [
          {
            "When": {
              "Fn::Equals": [
                [],
                "{{ accountIds }}"
              ]
            },
            "NextTask": "modifyScalingConfiguration"
          }
        ]
      }
    },
    {
      "Name": "shareImage",
      "Action": "ACS::ExecuteAPI",
      "Description": {
        "en": "Shares a custom image to other Alibaba Cloud accounts.",
        "zh-cn": "\u5171\u4eab\u81ea\u5b9a\u4e49\u955c\u50cf\u5230\u5176\u4ed6\u963f\u91cc\u4e91\u8d26\u53f7\u3002"
      },
      "Properties": {
        "Service": "ECS",
        "API": "ModifyImageSharePermission",
        "Parameters": {
          "RegionId": "{{ ACS::RegionId }}",
          "ImageId": "{{ createImage.imageId }}",
          "AddAccount": "{{ accountIds }}"
        }
      }
    },
    {
      "Name": "modifyScalingConfiguration",
      "Action": "ACS::ExecuteAPI",
      "Description": {
        "en": "Modify scaling configuration.",
        "zh-cn": "\u4fee\u6539\u4f38\u7f29\u914d\u7f6e\u3002"
      },
      "OnSuccess": "ACS::END",
      "Properties": {
        "Service": "ESS",
        "API": "ModifyScalingConfiguration",
        "Parameters": {
          "ScalingConfigurationId": "{{ ACS::TaskLoopItem }}",
          "ImageId": "{{ createImage.imageId }}"
        }
      },
      "Loop": {
        "Items": "{{ scalingConfigurationIds }}"
      }
    },
    {
      "Name": "deleteInstance",
      "Action": "ACS::ExecuteAPI",
      "Description": {
        "en": "Deletes the ECS instance after updating the image failure.",
        "zh-cn": "\u5220\u9664ECS\u5b9e\u4f8b\u3002"
      },
      "Properties": {
        "Service": "ECS",
        "API": "DeleteInstance",
        "Risk": "Normal",
        "Parameters": {
          "InstanceId": "{{ runInstances.instanceId }}",
          "Force": true
        }
      }
    }
  ],
  "Outputs": {
    "updatedImageId": {
      "Type": "String",
      "Value": "{{ createImage.imageId }}"
    },
    "imageIdAndRegion": {
      "Type": "List",
      "Value": {
        "Fn::If": [
          {
            "Fn::Equals": [
              "all-regions",
              "{{ queryAllAvailableRegions.allRegionsChosen }}"
            ]
          },
          "{{ copyImageToAllRegions.imageIdsWithRegion }}",
          "{{ copyImage.imageIdsWithRegion }}"
        ]
      }
    }
  }
}