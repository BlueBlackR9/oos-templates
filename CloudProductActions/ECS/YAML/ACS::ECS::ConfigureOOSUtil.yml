FormatVersion: OOS-2019-06-01
Description: Install OOS util.
Parameters:
  regionId:
    Description: The ID of region.
    Type: String
    Default: '{{ ACS::RegionId }}'
  instanceId:
    Description: Instance ID of the ECS instance.
    Type: String
    MaxLength: 30
    MinLength: 1
  version:
    Description: The version of OOS util.
    Type: String
    Default: '{{ ACS::OOSUtilVersion }}'
Tasks:
- Name: queryInstanceOSType
  Action: ACS::ExecuteApi
  Description: Queries ECS instance OS type.
  Properties:
    Service: ECS
    API: DescribeInstances
    Parameters:
      RegionId: '{{ regionId }}'
      InstanceIds:
      - '{{ instanceId }}'
  Outputs:
    OSType:
      Type: String
      ValueSelector: Instances.Instance[].OSType
- Name: runCommand
  Action: 'ACS::ECS::RunCommand'
  Description: Executes a cloud assistant command.
  Properties:
    commandContent:
      'Fn::If':
        - 'Fn::Equals':
            - linux
            -  '{{ queryInstanceOSType.OSType }}'
        - |-
          version='{{ version }}'
          path=/usr/local/share/aliyun-oosutil/$version
          test -e $path || mkdir -p $path
          cd $path && test -e oosutil_linux || wget "https://oos-public-{{regionId}}.oss-{{regionId}}-internal.aliyuncs.com/oosutil/$version/linux/oosutil_linux"
          chmod +x oosutil_linux
        - |-
          $version='{{ version }}'
          $path = "C:\aliyun-oosutil\$version"
          $pathExistOrNot = Test-Path -Path "$path"
          if ($pathExistOrNot){
              cd $path
          }else{
              mkdir $path
              cd $path
          }
          $client = new-object System.Net.WebClient
          $client.DownloadFile("https://oos-public-{{regionId}}.oss-{{regionId}}-internal.aliyuncs.com/oosutil/$version/windows/oosutil_windows.exe", "$path/oosutil_windows.exe")
    instanceId: '{{ instanceId }}'
    regionId: '{{ regionId }}'
    commandType:
      'Fn::If':
        - 'Fn::Equals':
            - linux
            -  '{{ queryInstanceOSType.OSType }}'
        - RunShellScript
        - RunPowerShellScript
  Outputs:
    commandOutput:
      Type: String
      ValueSelector: invocationOutput
Outputs:
  commandOutput:
    Type: String
    Value: '{{ runCommand.commandOutput }}'